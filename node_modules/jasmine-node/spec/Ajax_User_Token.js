describe("Test AJAX User Token", function () {

	beforeEach(function () {
		jasmine.Ajax.install();
		jasmine.clock().install();
	});

	afterEach(function () {
		jasmine.Ajax.uninstall();
		jasmine.clock().uninstall();
	});

	it("expected token proper endpoint", function () {
		var doneFN = jasmine.createSpy("success");

		var obj = {};
		var callback = {};

		$UserModels.GetToken(obj, callback);
		expect(jasmine.Ajax.requests.mostRecent().url).toBe($App.WebServiceRoot + '/authorize');
	});

	it("expected token ajax success callback", function () {
		var obj = {};
		spyOn($, "ajax").and.callFake(function (options) {
			options.success();
		});
		var callback = jasmine.createSpy();

		$UserModels.GetToken(obj, callback);
		expect(callback).toHaveBeenCalled();
	});

	it("expected token ajax error callback", function () {
		var obj = {};
		spyOn($, "ajax").and.callFake(function (options) {
			options.error();
		});
		var callback = jasmine.createSpy();

		$UserModels.GetToken(obj, callback);
		expect(callback).toHaveBeenCalled();
	});

	it("is asynchronous", function (done) {
		require(['frisby']), function (frisby)
		{
		frisby.create('Check For Valid Token Endpoint')
		.get($App.WebServiceRoot + '/authorize')
		.expectStatus(400)
		.toss();
		}

	});

});
